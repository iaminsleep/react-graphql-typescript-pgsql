how server side rendering works
    me -> browse http://localhost:3000
        -> next.js server
        -> request graphql server localhost:8080
        -> building the HTML
        -> sending back to your browser

getting cookie
    server side rendering
        browser -> next.js -> graphql api
    client side rendering
        browser -> graphql api

ctx {
  err: undefined,
  req: IncomingMessage {
    _readableState: ReadableState {    
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, 
tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: null,
      ended: true,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: true,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,        
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: true,
      dataEmitted: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: null
    },
    _events: [Object: null prototype] {      end: [Array],
      error: [Function (anonymous)]    
    },
    _eventsCount: 2,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState], 
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,        
      _writableState: [WritableState], 
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],  
      [Symbol(async_id_symbol)]: 61842,      [Symbol(kHandle)]: [TCP],        
      [Symbol(kSetNoDelay)]: false,    
      [Symbol(lastWriteQueueSize)]: 0, 
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,       
      [Symbol(kBufferGen)]: null,      
      [Symbol(kCapture)]: false,       
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,      
      [Symbol(RequestTimeout)]: undefined
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      'localhost:3000',
      'Connection',
      'keep-alive',
      'Cache-Control',
      'max-age=0',
      'sec-ch-ua',
      '"Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"',   
      'sec-ch-ua-mobile',
      '?0',
      'sec-ch-ua-platform',
      '"Windows"',
      'Upgrade-Insecure-Requests',     
      '1',
      'User-Agent',
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36',
      'Accept',
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
      'Sec-Fetch-Site',
      'same-origin',
      'Sec-Fetch-Mode',
      'navigate',
      'Sec-Fetch-User',
      '?1',
      'Sec-Fetch-Dest',
      'document',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-GB,en-US;q=0.9,en;q=0.8,ru;q=0.7',
      'Cookie',
      'qid=s%3AFJ-iryOGpxPjOcFbSxuIPuklVE-qTG44.HfJYa8lIf4D4Fv7M9UovOtnoD%2BDLbOvgEh%2BnnmGo4ak'
    ],
    rawTrailers: [],
    aborted: false,
    upgrade: false,
    url: '/',
    method: 'GET',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState], 
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,        
      _writableState: [WritableState], 
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],  
      [Symbol(async_id_symbol)]: 61842,      [Symbol(kHandle)]: [TCP],        
      [Symbol(kSetNoDelay)]: false,    
      [Symbol(lastWriteQueueSize)]: 0, 
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,       
      [Symbol(kBufferGen)]: null,      
      [Symbol(kCapture)]: false,       
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,      
      [Symbol(RequestTimeout)]: undefined
    },
    _consuming: false,
    _dumped: false,
    cookies: {
      qid: 's:FJ-iryOGpxPjOcFbSxuIPuklVE-qTG44.HfJYa8lIf4D4Fv7M9UovOtnoD+DLbOvgEh+nnmGo4ak'
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: 'localhost:3000',
      connection: 'keep-alive',        
      'cache-control': 'max-age=0',    
      'sec-ch-ua': '"Chromium";v="104", " Not A;Brand";v="99", "Google Chrome";v="104"',
      'sec-ch-ua-mobile': '?0',        
      'sec-ch-ua-platform': '"Windows"',
      'upgrade-insecure-requests': '1',      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36',
      accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',    
      'sec-fetch-site': 'same-origin', 
      'sec-fetch-mode': 'navigate',    
      'sec-fetch-user': '?1',
      'sec-fetch-dest': 'document',    
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8,ru;q=0.7',
      cookie: 'qid=s%3AFJ-iryOGpxPjOcFbSxuIPuklVE-qTG44.HfJYa8lIf4D4Fv7M9UovOtnoD%2BDLbOvgEh%2BnnmGo4ak'
    },
    [Symbol(kHeadersCount)]: 32,       
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0,       
    [Symbol(RequestTimeout)]: undefined,
    [Symbol(NextRequestMeta)]: {       
      __NEXT_INIT_URL: 'http://localhost:3000/',
      __NEXT_INIT_QUERY: {},
      _protocol: 'http',
      __NEXT_CLONABLE_BODY: [Object],  
      __nextHadTrailingSlash: false,   
      __nextIsLocaleDomain: false      
    }
  },
  res: <ref *1> ServerResponse {       
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] 
},
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true, 
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState], 
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,        
      _writableState: [WritableState], 
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *1],     
      [Symbol(async_id_symbol)]: 61842,      [Symbol(kHandle)]: [TCP],        
      [Symbol(kSetNoDelay)]: false,    
      [Symbol(lastWriteQueueSize)]: 0, 
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,       
      [Symbol(kBufferGen)]: null,      
      [Symbol(kCapture)]: false,       
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,      
      [Symbol(RequestTimeout)]: undefined
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: IncomingMessage {
      _readableState: [ReadableState], 
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,        
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/',
      method: 'GET',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: false,
      _dumped: false,
      cookies: [Object],
      [Symbol(kCapture)]: false,       
      [Symbol(kHeaders)]: [Object],    
      [Symbol(kHeadersCount)]: 32,     
      [Symbol(kTrailers)]: null,       
      [Symbol(kTrailersCount)]: 0,     
      [Symbol(RequestTimeout)]: undefined,
      [Symbol(NextRequestMeta)]: [Object]
    },
    _sent100: false,
    _expect_continue: false,
    statusCode: 200,
    flush: [Function: flush],
    write: [Function: write],
    end: [Function: end],
    on: [Function: on],
    writeHead: [Function: writeHead],  
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: null
  },
  pathname: '/',
  query: {},
  asPath: '/',
  locale: undefined,
  locales: undefined,
  defaultLocale: undefined,
  AppTree: [Function: AppTree],
  defaultGetInitialProps: [AsyncFunction: defaultGetInitefaultGetInitialProps]
}