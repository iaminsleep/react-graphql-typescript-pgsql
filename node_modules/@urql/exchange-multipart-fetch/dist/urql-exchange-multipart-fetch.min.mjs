import{share as e,mergeMap as r,filter as a,onPush as n,takeUntil as o,merge as t}from"wonka";import{extractFiles as i}from"extract-files";import{makeFetchBody as d,makeFetchURL as p,makeFetchOptions as y,makeFetchSource as m}from"@urql/core/internal";var s=({forward:s})=>f=>{var l=e(f),u=r((e=>{var r,t,s=a((r=>"teardown"===r.kind&&r.key===e.key))(l),{files:f,clone:u}=i({...e.variables}),c=d({query:e.query,variables:u});if(f.size){r=p(e),"application/json"===(t=y(e)).headers["content-type"]&&delete t.headers["content-type"],t.method="POST",t.body=new FormData,t.body.append("operations",JSON.stringify(c));var k={},b=0;f.forEach((e=>{k[++b]=e.map((e=>`variables.${e}`))})),t.body.append("map",JSON.stringify(k)),b=0,f.forEach(((e,r)=>{t.body.append(""+ ++b,r,r.name)}))}else r=p(e,c),t=y(e,c);return n((e=>{}))(o(s)(m(e,r,t)))}))(a((e=>"query"===e.kind||"mutation"===e.kind))(l)),c=s(a((e=>"query"!==e.kind&&"mutation"!==e.kind))(l));return t([u,c])};export{s as multipartFetchExchange};
//# sourceMappingURL=urql-exchange-multipart-fetch.min.mjs.map
